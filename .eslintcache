[{"C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\index.js":"1","C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\App.js":"2","C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\components\\BucketList.js":"3","C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\components\\BucketForm.js":"4","C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\components\\Bucket.js":"5","C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\index.js":"6","C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\App.js":"7","C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\components\\BucketList.js":"8","C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\components\\BucketForm.js":"9","C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\components\\Bucket.js":"10"},{"size":207,"mtime":1633968590714,"results":"11","hashOfConfig":"12"},{"size":204,"mtime":1633968590711,"results":"13","hashOfConfig":"12"},{"size":1904,"mtime":1633968590713,"results":"14","hashOfConfig":"12"},{"size":2688,"mtime":1633968590712,"results":"15","hashOfConfig":"12"},{"size":1622,"mtime":1633968590712,"results":"16","hashOfConfig":"12"},{"size":226,"mtime":1634695484221,"results":"17","hashOfConfig":"18"},{"size":204,"mtime":1633968590711,"results":"19","hashOfConfig":"18"},{"size":1904,"mtime":1633968590713,"results":"20","hashOfConfig":"18"},{"size":3062,"mtime":1634695216398,"results":"21","hashOfConfig":"18"},{"size":1622,"mtime":1633968590712,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17p5q2n",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lpzyys",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\index.js",[],"C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\App.js",[],"C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\components\\BucketList.js",["45"],"C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\components\\BucketForm.js",["46"],"C:\\Users\\angel\\ur-rich-fsf-pt-05-2021-u-c\\20-React\\01-Activities\\28-Stu_Mini-Project\\Develop\\bucket-list\\src\\components\\Bucket.js",["47"],"C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\index.js",[],"C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\App.js",[],"C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\components\\BucketList.js",["48"],"import React, { useState } from 'react';\r\nimport BucketForm from './BucketForm';\r\nimport Bucket from './Bucket';\r\n\r\nfunction BucketList() {\r\n  const [bucket, setBucket] = useState([]);\r\n\r\n  // Function to add a bucket list item\r\n  const addBucketItem = (item) => {\r\n\r\n    // TODO: Write logic to add the new bucket item to the bucket state variable\r\n    \r\n  };\r\n\r\n  // Function to mark bucket list item as complete\r\n  const completeBucketItem = (id) => {\r\n    // If the ID passed to this function matches the ID of the item that was clicked, mark it as complete\r\n    let updatedBucket = bucket.map((item) => {\r\n      \r\n      // TODO: Write logic that marks an item as complete or incomplete when invoked\r\n\r\n    });\r\n\r\n    setBucket(updatedBucket);\r\n  };\r\n\r\n  // Function to remove bucket list item and update state\r\n  const removeBucketItem = (id) => {\r\n    // TODO: Write logic that will return an array of items that don't contain the ID passed to this function\r\n\r\n\r\n    // TODO: Update the bucket state variable\r\n  };\r\n\r\n  // Function to edit the bucket list item\r\n  const editBucketItem = (itemId, newValue) => {\r\n    // Make sure that the value isn't empty\r\n    if (!newValue.text) {\r\n      return;\r\n    }\r\n\r\n    // We use the \"prev\" argument provided with the useState hook to map through our list of items\r\n    // We then check to see if the item ID matches the id of the item that was clicked and if so, we set it to a new value\r\n    setBucket((prev) =>\r\n      prev.map((item) => (item.id === itemId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>What is on your bucket list?</h1>\r\n      <BucketForm onSubmit={addBucketItem} />\r\n      <Bucket\r\n        bucket={bucket}\r\n        completeBucketItem={completeBucketItem}\r\n        removeBucketItem={removeBucketItem}\r\n        editBucketItem={editBucketItem}\r\n      ></Bucket>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BucketList;\r\n","C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\components\\BucketForm.js",[],"C:\\Users\\angel\\OneDrive\\Desktop\\Home Work\\bucket-list\\src\\components\\Bucket.js",["49"],"import React, { useState } from 'react';\r\nimport BucketForm from './BucketForm';\r\n\r\nfunction Bucket(props) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: '',\r\n    eagerness: '',\r\n  });\r\n\r\n  console.log(props.bucket);\r\n\r\n  const submitUpdate = (value) => {\r\n\r\n    // TODO: Write logic to update the `edit` value in state after a user updates an entry in the list\r\n\r\n    // TODO: Set the key:value pairs in the `edit` object back to empty strings\r\n\r\n  };\r\n\r\n  // If the user is attempting to edit an item, render the bucket form with the edit variable passed as a prop\r\n  if (edit.id) {\r\n    return <BucketForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return props.bucket.map((item, index) => (\r\n    // TODO: Add a className of `bucket row complete ${item.eagerness}` for completed items, and `bucket-row ${item.eagerness}` for non-completed items\r\n    // TODO: Add a key attribute set to the value of the index position\r\n    // Hint: use a ternary operator\r\n    <div className={ } key={}>\r\n\r\n      // TODO: Add an onClick event that invokes the `completeBucketItem` method passing the item id as a argument\r\n      <div key={} onClick={}>\r\n          {/* TODO: Add the item text here */}\r\n      </div>\r\n      <div className=\"icons\">\r\n        // TODO: Add an onClick event update the `edit` object with the `id`, `value`, and `eagerness` properties\r\n        <p onClick={}> ‚úèÔ∏è</p>\r\n        {/* TODO: Add an onClick event that will invoke the removeBucketItem method passing in the `item.id` */}\r\n        <p onClick={}> üóëÔ∏è</p>\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Bucket;\r\n",{"ruleId":"50","severity":1,"message":"51","line":18,"column":43,"nodeType":"52","messageId":"53","endLine":18,"endColumn":45},{"ruleId":null,"fatal":true,"severity":2,"message":"54","line":50,"column":24},{"ruleId":null,"fatal":true,"severity":2,"message":"55","line":30,"column":20},{"ruleId":"50","severity":1,"message":"51","line":18,"column":43,"nodeType":"52","messageId":"53","endLine":18,"endColumn":45},{"ruleId":null,"fatal":true,"severity":2,"message":"55","line":30,"column":20},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Parsing error: JSX attributes must only be assigned a non-empty expression.\n\n\u001b[0m \u001b[90m 48 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m\"dropdown-content\"\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 49 |\u001b[39m             {\u001b[90m/* TODO: Add an onClick event that will set the corresponding eagerness level from the `eagernessLevel` array */\u001b[39m}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 50 |\u001b[39m             \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[33mMust\u001b[39m \u001b[36mdo\u001b[39m\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 51 |\u001b[39m             \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[33mWant\u001b[39m to \u001b[36mdo\u001b[39m\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 52 |\u001b[39m             \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[33mTake\u001b[39m it or leave it\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 53 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","Parsing error: JSX attributes must only be assigned a non-empty expression.\n\n\u001b[0m \u001b[90m 28 |\u001b[39m     \u001b[90m// TODO: Add a key attribute set to the value of the index position\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 29 |\u001b[39m     \u001b[90m// Hint: use a ternary operator\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m{ } key\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 32 |\u001b[39m       \u001b[90m// TODO: Add an onClick event that invokes the `completeBucketItem` method passing the item id as a argument\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m key\u001b[33m=\u001b[39m{} onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[0m"]